@model LoginAttempt
@{
    ViewData["Title"] = "Log In";
    bool incorrectLogin = ViewData.Keys.Contains("incorrectLogin");
}
<div class="row">
    <div class="col-md-4">
        
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <form asp-controller="Account" asp-action="Login" method="post">
            <h4>Log In</h4>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            @if (incorrectLogin)
            {
                <span class="text-danger">Incorrect Email or Password.</span>
            }
        <div class="btn-group d-flex justify-content-between">
            <input class="btn btn-primary" type="submit" value="Log In"/>
            <a class="btn btn-secondary" role="button" asp-controller="Account" asp-action="Create">Create Account</a>
        </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Home" asp-action="Index">Back</a>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
